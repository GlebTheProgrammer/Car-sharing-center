@using CarSharingApp.Models.VehicleData
@model VehicleInformationViewModel

<main class="container mt-5">


    <div class="row g-5">
        <div class="col-md-8">
            <h3 class="pb-2 mb-4 fst-italic border-bottom text-center">
                About Car Page
            </h3>

            <img class="img-fluid mt-3 mx-auto d-block rounded" style="height: auto" src="@Model.Image">

            <article class="blog-post mt-2">
                <h2 class="blog-post-title">@Model.Name</h2>
                <p class="blog-post-meta">Published: @(Model.PublishedTime.Month) @(Model.PublishedTime.Day), @(Model.PublishedTime.Year) by <a href="@Url.Action("Index", "ClientProfile", new {id = Model.OwnerId})">@Model.OwnerUsername</a></p>

                <p>@Model.Description</p>
                <hr>
            </article>
            @{
                var latModel = float.Parse(Model.Location.Latitude.Replace('.', ','));
                var longModel = float.Parse(Model.Location.Longitude.Replace('.', ','));
            }
            <article class="blog-post">
                <h3>Vehicle location</h3>
                <p>You can see vehicle location (@Model.Location.Address) on the map and check if it suits you:</p>
                <div class="mt-4 mb-2">
                    <div class="container-fluid">
                        <div id="map" class="text-center" style="height: 400px; width: 100%;"></div>
                        <script>
                            var map;
                            function initMap() 
                            {
                                var latitude = '@Html.Raw(Json.Serialize(latModel))';
                                var longitude = '@Html.Raw(Json.Serialize(longModel))';

                                var latSerialized = JSON.parse(latitude);
                                var longSerialized = JSON.parse(longitude);

                                map = new google.maps.Map(document.getElementById('map'), {
                                    center: { lat: latSerialized, lng: longSerialized },
                                    zoom: 11
                                });

                                var marker = new google.maps.Marker(
                                {
                                    position: new google.maps.LatLng(latSerialized, longSerialized),
                                    map: map
                                });
                            }
                        </script>
                        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC9AIXs7jB_3r8oRc1zd0i9p0nanEH5Q6M&callback=initMap" async defer></script>
                    </div>
                </div>
                <hr>
            </article>

            <article class="blog-post">
                <h3>Information table</h3>
                <p>Here you can see all the detailed information about the vehicle:</p>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th class="text-center">Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <!--Год выуска-->
                            <td>Production year</td>
                            <td class="text-center">@Model.ProductionYear</td>
                        </tr>
                        <tr>
                            <!--Скорость автомобиля-->
                            <td>Max speed</td>
                            <td class="text-center">@Model.MaxSpeed</td>
                        </tr>
                        <tr>
                            <!--Внешний цвет автомобиля-->
                            <td>Exterior color</td>
                            <td class="text-center">@Model.ExteriorColor</td>
                        </tr>
                        <tr>
                            <!--Цвет салона-->
                            <td>Interior color</td>
                            <td class="text-center">@Model.InteriorColor</td>
                        </tr>
                        <tr>
                            <!--Трансмиссия-->
                            <td>Drivetrain</td>
                            <td class="text-center">@Model.Drivetrain</td>
                        </tr>
                        <tr>
                            <!--Тип топлива-->
                            <td>Fuel type</td>
                            <td class="text-center">@Model.FuelType</td>
                        </tr>
                        <tr>
                            <!--Коробка передач-->
                            <td>Transmission</td>
                            <td class="text-center">@Model.Transmission</td>
                        </tr>
                        <tr>
                            <!--Тип двигателя-->
                            <td>Engine</td>
                            <td class="text-center">@Model.Engine</td>
                        </tr>
                    </tbody>
                    <tfoot>
                        <tr>
                            <td>Times ordered</td>
                            <td class="text-center">@Model.TimesOrdered</td>
                        </tr>
                    </tfoot>
                </table>

                <p class="mt-4">This data was provided by the user who posted it. Our company is not responsible for the information you can see on this page.</p>
            </article>
        </div>

        <div class="col-md-4">
            <div class="position-sticky" style="top: 4rem;">
                <div class="p-4 mb-3 bg-light rounded">
                    <h4 class="fst-italic">Description</h4>
                    <p class="mb-0">@Model.BriefDescription</p>
                </div>

                <div class="ml-4 mt-4">
                    <h4 class="fst-italic mb-3">Rating (@(Model.Rating.ReviewsCount) reviews)</h4>
                    <span class="h6 mr-1">Condition:</span>
                    <span class="card-text">@Math.Round(Model.Rating.Condition, 1) </span>
                    @{
                        double rating = Math.Round(Model.Rating.Condition, 1);
                        for(int i = 0; i < 5; i++)
                        {
                            if (rating > i && rating >= i + 1)
                            {
                                                                                                                                                                    <span class="fa fa-star checked" style="color: orange"></span>
                            }
                            else
                            {
                                if(rating > i && rating < i + 1)
                                {
                                                                                                                                                                        <span class="fa fa-star-half-stroke" style="color: orange"></span>
                                }
                                else
                                {
                                                                                                                                                                        <span class="fa fa-star"></span>
                                }
                            }
                        }
                    }
                </div>

                <div class="ml-4 mt-1">
                    <span class="h6 mr-1">Fuel consumption:</span>
                    <span class="card-text">@Math.Round(Model.Rating.FuelConsumption, 1) </span>
                    @{
                        rating = Math.Round(Model.Rating.FuelConsumption, 1);
                        for (int i = 0; i < 5; i++)
                        {
                            if (rating > i && rating >= i + 1)
                            {
                                                                                                                                                                    <span class="fa fa-star checked" style="color: orange"></span>
                            }
                            else
                            {
                                if (rating > i && rating < i + 1)
                                {
                                                                                                                                                                        <span class="fa fa-star-half-stroke" style="color: orange"></span>
                                }
                                else
                                {
                                                                                                                                                                        <span class="fa fa-star"></span>
                                }
                            }
                        }
                    }
                </div>

                <div class="ml-4 mt-1">
                    <span class="h6 mr-1">Easy to drive:</span>
                    <span class="card-text">@Math.Round(Model.Rating.EasyToDrive, 1) </span>
                    @{
                        rating = Math.Round(Model.Rating.EasyToDrive, 1);
                        for (int i = 0; i < 5; i++)
                        {
                            if (rating > i && rating >= i + 1)
                            {
                                                                                                                                                                    <span class="fa fa-star checked" style="color: orange"></span>
                            }
                            else
                            {
                                if (rating > i && rating < i + 1)
                                {
                                                                                                                                                                        <span class="fa fa-star-half-stroke" style="color: orange"></span>
                                }
                                else
                                {
                                                                                                                                                                        <span class="fa fa-star"></span>
                                }
                            }
                        }
                    }
                </div>

                <div class="ml-4 mt-1">
                    <span class="h6 mr-1">Family-friendly:</span>
                    <span class="card-text">@Math.Round(Model.Rating.FamilyFriendly, 1) </span>
                    @{
                        rating = Math.Round(Model.Rating.FamilyFriendly, 1);
                        for (int i = 0; i < 5; i++)
                        {
                            if (rating > i && rating >= i + 1)
                            {
                                                                                                                                                                                                                                <span class="fa fa-star checked" style="color: orange"></span>
                            }
                            else
                            {
                                if (rating > i && rating < i + 1)
                                {
                                                                                                                                                                                                                                    <span class="fa fa-star-half-stroke" style="color: orange"></span>
                                }
                                else
                                {
                                                                                                                                                                                                                                    <span class="fa fa-star"></span>
                                }
                            }
                        }
                    }
                </div>

                <div class="ml-4 mt-1">
                    <span class="h6 mr-1">SUV:</span>
                    <span class="card-text">@Math.Round(Model.Rating.SUV, 1) </span>
                    @{
                        rating = Math.Round(Model.Rating.SUV, 1);
                        for (int i = 0; i < 5; i++)
                        {
                            if (rating > i && rating >= i + 1)
                            {
                                                                                                                                                                                                                                <span class="fa fa-star checked" style="color: orange"></span>
                            }
                            else
                            {
                                if (rating > i && rating < i + 1)
                                {
                                                                                                                                                                                                                                    <span class="fa fa-star-half-stroke" style="color: orange"></span>
                                }
                                else
                                {
                                                                                                                                                                                                                                    <span class="fa fa-star"></span>
                                }
                            }
                        }
                    }
                </div>

                <div class="ml-4 mt-4">
                    <span class="h4 mr-1">Overall:</span>
                    <span class="card-text">@Math.Round(Model.Rating.Overall, 1) </span>
                    @{
                        rating = Math.Round(Model.Rating.Overall, 1);
                        for (int i = 0; i < 5; i++)
                        {
                            if (rating > i && rating >= i + 1)
                            {
                                                                                                                                                                                                                                <span class="fa fa-star checked" style="color: orange"></span>
                            }
                            else
                            {
                                if (rating > i && rating < i + 1)
                                {
                                                                                                                                                                                                                                    <span class="fa fa-star-half-stroke" style="color: orange"></span>
                                }
                                else
                                {
                                                                                                                                                                                                                                    <span class="fa fa-star"></span>
                                }
                            }
                        }
                    }
                </div>

                <div class="ml-4 mt-4">
                    <h4 class="fst-italic">Price</h4>
                    <h4 class="card-text">@Model.Tariff.TariffPerHour $<span class="text-muted h5">/hr - </span>@Model.Tariff.TariffPerDay $<span class="text-muted h5">/day</span></h4>
                </div>

                <nav class="blog-pagination ml-4 mt-4" aria-label="Pagination">


                    <!-- Button trigger modal -->
                    <button type="button" class="btn btn-outline-primary mr-2" data-bs-toggle="modal"
                            data-bs-target="#exampleModal">Order
                    </button>


                    <a class="btn btn-outline-secondary" asp-controller="CarSharing" asp-action="Index">Get back</a>
                </nav>
            </div>
        </div>
    </div>

</main>


<form asp-controller="CarInformation" asp-action="CreateCheckoutSession" method="post">
    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel"
         aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header border-bottom-0">
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-start text-black p-4">
                    <h3 class="mb-4" style="color: #35558a;">Order Details</h3>
                    <h5 class="modal-title mb-2" id="exampleModalLabel">Your order Starts from</h5>

                    <div class="md-form md-outline datepicker mb-4" id="customDays">
                        <input type="text" id="datetimesStarts" class="form-control" name="datetimesStarts" disabled>
                    </div>

                    <h5 class="modal-title mb-2" id="exampleModalLabel">Your order Ends at</h5>

                    <div class="md-form md-outline datepicker mb-5" id="customDays">
                        <input placeholder="Select date" type="text" id="datetimesEnds" class="form-control" name="datetimesEnds">
                    </div>

                    <script>
                        $(function () {
                            $('input[name="datetimesStarts"]').daterangepicker({
                                timePicker: true,
                                startDate: moment().startOf('hour').add(1,'hour'), // Время для автоматического подставления (с ...)
                                timePicker24Hour: true,
                                singleDatePicker: true,
                                locale: {
                                    format: 'HH:mm DD MMMM YYYY'
                                }
                            });
                        });

                        $(function () {
                            $('input[name="datetimesEnds"]').daterangepicker({
                                timePicker: true, // Возможность выставлять время
                                minDate: moment().startOf('hour').add(2,'hour'), // Минимальная дата, которая может быть выставлена
                                maxDate: moment().startOf('hour').add(7,'day').add(1,'hour'), // Максимальная дата, которая может быть выставлена
                                startDate: moment().startOf('hour').add(2, 'hour'), // Время для автоматического подставления (с ...)
                                timePicker24Hour: true, // 24-часовой аояс
                                timePickerIncrement: 60, // Можно редактировать только часы (минуты всегда 00)
                                singleDatePicker: true, // DatePicker только для одной даты
                                locale: {
                                    format: 'HH:mm DD MMMM YYYY'
                                },

                                onselect: function() {
                                    var dateObj = $(this).daterangepicker('getDate');
                                    alert(dateObj);
                                }
                            });
                        });

                    

                    </script>


                    <p class="mb-0" style="color: #35558a;">Payment summary</p>
                    <hr class="mt-2 mb-4"
                        style="height: 0; background-color: transparent; opacity: .75; border-top: 2px dashed #9e9e9e;">

                    <div class="d-flex justify-content-between">
                        <p class="fw-bold mb-0">@Model.Name (Daily payment)</p>
                        <p id="totalDailyPrice" class="text-muted mb-0">$0.00</p>
                    </div>

                    <div class="d-flex justify-content-between">
                        <p class="small mb-0">Houtly payment</p>
                        <p id="totalHourlyPrice" class="small mb-0">$@(Model.Tariff.TariffPerHour).00</p>
                    </div>

                    <div class="d-flex justify-content-between">
                        <p class="fw-bold">Total</p>
                        <p id="totalPrice" class="fw-bold" style="color: #35558a;">$@(Model.Tariff.TariffPerHour).00</p>


                        <input class="visually-hidden" type="text" id="totalPriceInput" placeholder="amount" value="@Model.Tariff.TariffPerHour" name="amount" readonly/>
                        <input class="visually-hidden" type="text" value="@Model.Name" name="vehicleName" readonly/>

                        <input class="visually-hidden" type="text" id="startMonthInput" value="@DateTime.Now.AddMinutes(60).ToString("MMMM")" name="startMonth" readonly />
                        <input class="visually-hidden" type="text" id="endMonthInput" value="@DateTime.Now.AddMinutes(120).ToString("MMMM")" name="endMonth" readonly />
                        <input class="visually-hidden" type="text" id="startDayInput" value="@DateTime.Now.AddMinutes(60).Day" name="startDay" readonly />
                        <input class="visually-hidden" type="text" id="endDayInput" value="@DateTime.Now.AddMinutes(120).Day" name="endDay" readonly />
                        <input class="visually-hidden" type="text" id="startHourInput" value="@DateTime.Now.AddMinutes(60).Hour" name="startHour" readonly />
                        <input class="visually-hidden" type="text" id="endHourInput" value="@DateTime.Now.AddMinutes(120).Hour" name="endHour" readonly />

                    </div>

                </div>
                <div class="modal-footer d-flex justify-content-center border-top-0 py-4">
                    <button type="submit" class="btn btn-outline-primary btn-lg mb-1">
                        Pay for the order
                    </button>
                </div>
            </div>
        </div>
    </div>
</form>


<script>
    function getDaysInCurrentMonth() {
        const date = new Date();

        return new Date(
            date.getFullYear(),
            date.getMonth() + 1,
            0
        ).getDate();
    }
</script>

<script>
    $('#datetimesEnds').on('hide.daterangepicker', function (ev, picker) {

        var datetimesStartsObj = $('#datetimesStarts').data('daterangepicker').startDate;
        var datetimesEndsObj = $('#datetimesEnds').data('daterangepicker').startDate;

        const datetimesStartsStr = datetimesStartsObj.toString();
        const datetimesEndsStr = datetimesEndsObj.toString();

        var arrayStarts = datetimesStartsStr.split(' ');
        var arrayEnds = datetimesEndsStr.split(' ');

        var dayStarts = arrayStarts[2];
        var timeStarts = arrayStarts[4];

        var dayEnds = arrayEnds[2];
        var timeEnds = arrayEnds[4];

        var vehicleHourlyTariff = parseInt("@Model.Tariff.TariffPerHour");
        var vehicleDailyTariff = parseInt("@Model.Tariff.TariffPerDay");

        var timeStartsInt = parseInt(timeStarts.slice(0, 2));
        var timeEndsInt = parseInt(timeEnds.slice(0, 2));
        var dayStartsInt = parseInt(dayStarts);
        var dayEndsInt = parseInt(dayEnds);


        var totalHourlyPrice;
        var totalDailyPrice;
        var totalPrice;

        if (dayEndsInt > dayStartsInt && timeStartsInt > timeEndsInt) // 28 23:00 -> 30 1:00
        {
            totalDailyPrice = (dayEndsInt - dayStartsInt - 1) * vehicleDailyTariff;
            totalHourlyPrice = (24 - timeStartsInt + timeEndsInt) * vehicleHourlyTariff;
        }
        else {

            if (dayEndsInt < dayStartsInt && timeStartsInt > timeEndsInt) // 28 23:00 -> 1 1:00
            {
                totalDailyPrice = (getDaysInCurrentMonth() - dayEndsInt - 1 + dayStartsInt) * vehicleDailyTariff;
                totalHourlyPrice = (24 - timeStartsInt + timeEndsInt) * vehicleHourlyTariff;
            }
            else
            {
                if (dayEndsInt < dayStartsInt && timeStartsInt <= timeEndsInt) // 28 1:00 -> 1 23:00
                {
                    totalDailyPrice = (getDaysInCurrentMonth() - dayEndsInt + dayStartsInt) * vehicleDailyTariff;
                    totalHourlyPrice = (timeEndsInt - timeStartsInt) * vehicleHourlyTariff;
                }
                else
                {
                    totalDailyPrice = (dayEndsInt - dayStartsInt) * vehicleDailyTariff;
                    totalHourlyPrice = (timeEndsInt - timeStartsInt) * vehicleHourlyTariff;
                }
            }
        }

        totalPrice = totalHourlyPrice + totalDailyPrice;

        document.getElementById("totalDailyPrice").textContent = "$" + totalDailyPrice + ".00";
        document.getElementById("totalHourlyPrice").textContent = "$" + totalHourlyPrice + ".00";
        document.getElementById("totalPrice").textContent = "$" + (totalPrice) + ".00";

        document.getElementById("totalPriceInput").value = totalPrice;

        document.getElementById("startMonthInput").value = arrayStarts[1];
        document.getElementById("endMonthInput").value = arrayEnds[1];
        document.getElementById("startDayInput").value = dayStartsInt;
        document.getElementById("endDayInput").value = dayEndsInt;
        document.getElementById("startHourInput").value = timeStartsInt;
        document.getElementById("endHourInput").value = timeEndsInt;

    });

    window.addEventListener("DOMContentLoaded", function () {
        var datetimesStartsObj = $('#datetimesStarts').data('daterangepicker').startDate;
        var datetimesEndsObj = $('#datetimesEnds').data('daterangepicker').startDate;

        const datetimesStartsStr = datetimesStartsObj.toString();
        const datetimesEndsStr = datetimesEndsObj.toString();

        var arrayStarts = datetimesStartsStr.split(' ');
        var arrayEnds = datetimesEndsStr.split(' ');

        var dayStarts = arrayStarts[2];
        var timeStarts = arrayStarts[4];

        var dayEnds = arrayEnds[2];
        var timeEnds = arrayEnds[4];

        var vehicleHourlyTariff = parseInt("@Model.Tariff.TariffPerHour");
        var vehicleDailyTariff = parseInt("@Model.Tariff.TariffPerDay");

        var timeStartsInt = parseInt(timeStarts.slice(0, 2));
        var timeEndsInt = parseInt(timeEnds.slice(0, 2));
        var dayStartsInt = parseInt(dayStarts);
        var dayEndsInt = parseInt(dayEnds);


        var totalHourlyPrice;
        var totalDailyPrice;
        var totalPrice;

        if (dayEndsInt > dayStartsInt && timeStartsInt > timeEndsInt) // 28 23:00 -> 30 1:00
        {
            totalDailyPrice = (dayEndsInt - dayStartsInt - 1) * vehicleDailyTariff;
            totalHourlyPrice = (24 - timeStartsInt + timeEndsInt) * vehicleHourlyTariff;
        }
        else {

            if (dayEndsInt < dayStartsInt && timeStartsInt > timeEndsInt) // 28 23:00 -> 1 1:00
            {
                totalDailyPrice = (getDaysInCurrentMonth() - dayEndsInt - 1 + dayStartsInt) * vehicleDailyTariff;
                totalHourlyPrice = (24 - timeStartsInt + timeEndsInt) * vehicleHourlyTariff;
            }
            else {
                if (dayEndsInt < dayStartsInt && timeStartsInt <= timeEndsInt) // 28 1:00 -> 1 23:00
                {
                    totalDailyPrice = (getDaysInCurrentMonth() - dayEndsInt + dayStartsInt) * vehicleDailyTariff;
                    totalHourlyPrice = (timeEndsInt - timeStartsInt) * vehicleHourlyTariff;
                }
                else {
                    totalDailyPrice = (dayEndsInt - dayStartsInt) * vehicleDailyTariff;
                    totalHourlyPrice = (timeEndsInt - timeStartsInt) * vehicleHourlyTariff;
                }
            }
        }

        totalPrice = totalHourlyPrice + totalDailyPrice;

        document.getElementById("totalDailyPrice").textContent = "$" + totalDailyPrice + ".00";
        document.getElementById("totalHourlyPrice").textContent = "$" + totalHourlyPrice + ".00";
        document.getElementById("totalPrice").textContent = "$" + (totalPrice) + ".00";

        document.getElementById("totalPriceInput").value = totalPrice;

        document.getElementById("startMonthInput").value = arrayStarts[1];
        document.getElementById("endMonthInput").value = arrayEnds[1];
        document.getElementById("startDayInput").value = dayStartsInt;
        document.getElementById("endDayInput").value = dayEndsInt;
        document.getElementById("startHourInput").value = timeStartsInt;
        document.getElementById("endHourInput").value = timeEndsInt;
    });

</script>

